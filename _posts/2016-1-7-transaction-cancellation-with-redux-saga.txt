---

title: Transaction cancellation with redux-saga

layout: post

---

I've been working on translating the Faraday app to use redux as its primary state-management tool for a few days. One of the problems I've had in this is managing complex asynchronous action chains in a way that's understandable, maintainable, and testable. I stumbled over the redux-saga project earlier this week and it seemed like a perfect fit, I just needed to work in one little feature that I'd like to talk about.

redux-saga is a plugin for redux that creates a new transition-management primitive, the saga, which describes a series of actions that can be taken that can produce side effects into the redux store. On the surface, it offers similar features to redux-thunk or redux-promise, though I think it has a few unique advantages.

The first advantage is that it's incredibly easy to test without doing any mocking. 